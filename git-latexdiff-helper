#!/bin/bash

# This tool is written by Richard Darst and released under the Gnu
# General Public License version 2 or later.

DEFAULT_LATEX=pdflatex
DEFAULT_LATEXDIFF=latexdiff
DEFAULT_PDFVIEWER=

set -e
[ "$GLD_CONT" ] && set +e  # do not stop on errors
[ "$V" = 2 ] && set -x
[ "$V" = 2 ] && env
[ "$V" ] && pwd
[ "$V" ] && echo "$@"

# General note:
#  ${NAME:-expansions} uses expansion as a default if NAME is empty

LATEX=${LATEX:-$DEFAULT_LATEX}
LATEXDIFF=${LATEXDIFF:-$DEFAULT_LATEXDIFF}

if [ ! -f "$1" -o ! -f "$2" ] ; then
    echo "Input files: $1, $2"
    echo "Input files are not found.  Are you running properly?"
    echo ""
    echo "Usage:"
    echo "  git config --global difftool.latexdiff.cmd '$0 \"\$LOCAL\" \"\$REMOTE\"'"
    echo "  git config --global alias.latexdiff \"difftool -t latexdiff\""
    echo "  git latexdiff [V1..V2]  filename.tex"
    echo "  Must be run with only FILE.tex, it obviously doesn't work on non-tex files."
    echo ""
    echo "Environment variables for customization (OUTPUT=x.pdf git latexdiff ...):"
    echo "  OUTPUT: filename to write to"
    echo "  PDFVIEWER: PDF viewer to launch"
    echo "  LATEX: The latex compiler, latex or pdflatex"
    echo "  LDOPTS: Command line options to latexdiff"
    echo "  V: Verbose mode, set to anything for level1, V=2 for full output."
    echo "  GLD_CONT: Do not stop on errors (don't \"set -e\" in bash)."
    echo "            Sometimes useful when latex or bibtex has an error."
fi

# This is based on
#  http://tex.stackexchange.com/questions/1325/using-latexdiff-with-git,
#  with many more improvements.

if [ `uname -s` = Darwin ]
then
    OUTPUTTMPDIR=$(mktemp -d -t "")
else
    OUTPUTTMPDIR=$(mktemp -d -t git-latexdiff.XXXXXXXX)
fi

[ "$V" ] && echo "Output tmp dir = $OUTPUTTMPDIR"

$LATEXDIFF $LDOPTS "$1" "$2" > $OUTPUTTMPDIR/diff.tex 2>/dev/null

# All the miscelaneous text .aux, etc, files will go into here - our
# temporary directory, to not clutter our working directory
export TEXMFOUTPUT=$OUTPUTTMPDIR

# We have to put the actual compilation commands in a function in
# order to do conditional redirection.  Bash doesn't have a better
# means of doing this.
_runlatex () {
    echo "running"
    echo $LATEX
  $LATEX -interaction nonstopmode -output-directory $OUTPUTTMPDIR $OUTPUTTMPDIR/diff.tex || true
  # Run bibtex + latex again if we have the \bibliography command.
  if grep -q '\\bibliography[^a-zA-Z]' $OUTPUTTMPDIR/diff.tex ; then
      bibtex $OUTPUTTMPDIR/diff
      $LATEX -interaction nonstopmode -output-directory \
            $OUTPUTTMPDIR $OUTPUTTMPDIR/diff.tex || true
  fi
  $LATEX -interaction nonstopmode -output-directory $OUTPUTTMPDIR $OUTPUTTMPDIR/diff.tex \
   || true
  echo "done"
}

# Either run without redirection if $V==2 or else redirect everything away.
if [ "$V" = 2 ] ; then   _runlatex
else                     _runlatex &> /dev/null
fi

# Copy output back to where it belongs.
OUTPUT=${OUTPUT:-diff-`basename $2`.pdf}
cp $OUTPUTTMPDIR/diff.pdf "$OUTPUT"

# Remove tmp dir.
rm -rf "$OUTPUTTMPDIR"

echo "Result is in $OUTPUT"

# Open in a pdf viewer.
PDFVIEWER=${PDFVIEWER:-$DEFAULT_PDFVIEWER}
[ "$V" ] && echo "  --> in `pwd`"
if [ "$PDFVIEWER" ]
then
    [ "$V" ] && echo "Using pdf viewer = $PDFVIEWER"
    "$PDFVIEWER" "$OUTPUT" &> /dev/null
fi
